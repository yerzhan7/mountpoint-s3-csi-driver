{{- if .Values.experimental.podMounter -}}

{{- if .Values.controller.serviceAccount.create -}}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.controller.serviceAccount.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "aws-mountpoint-s3-csi-driver.labels" . | nindent 4 }}
  {{- with .Values.controller.serviceAccount.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: s3-csi-driver-controller-role
  namespace: {{ .Values.mountpointPod.namespace }}
  labels:
    {{- include "aws-mountpoint-s3-csi-driver.labels" . | nindent 4 }}
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "create", "watch", "delete", "list", "update"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csistoragecapacities"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  - apiGroups: ["apps"]
    resources: ["replicasets"]
    verbs: ["get"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: s3-csi-driver-controller-role-binding
  namespace: {{ .Values.mountpointPod.namespace }}
  labels:
    {{- include "aws-mountpoint-s3-csi-driver.labels" . | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ .Values.controller.serviceAccount.name }}
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: s3-csi-driver-controller-role
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: s3-csi-driver-controller-cluster-role
  labels:
    {{- include "aws-mountpoint-s3-csi-driver.labels" . | nindent 4 }}
rules:
  - apiGroups: [""]
    resources: ["pods", "persistentvolumeclaims", "persistentvolumes", "serviceaccounts"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["s3.csi.aws.com"]
    resources: ["mountpoints3podattachments"]
    verbs: ["create", "delete", "update", "get", "watch", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "patch", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  # TODO: We might need to add some Helm flag to let customers to restrict bucket creation only in certain namespace
  - apiGroups: ["s3.services.k8s.aws"]
    resources: ["buckets"]
    verbs: ["create", "delete", "get", "list", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: s3-csi-driver-controller-cluster-role-binding
  labels:
    {{- include "aws-mountpoint-s3-csi-driver.labels" . | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: {{ .Values.controller.serviceAccount.name }}
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: s3-csi-driver-controller-cluster-role
  apiGroup: rbac.authorization.k8s.io
{{- end -}}

{{- end -}}
